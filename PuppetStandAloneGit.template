{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Create an EBS-backed EC2 instance based on the region and architecture and an IAM user with access to an S3 bucket via an IAM policy.",

  "Parameters" : {
	"Arch" : {
      "Description" : "EC2 architecture, 32 or 64",
      "Type" : "Number",
      "Default" : "64",
	  "AllowedValues" : [ "32", "64" ]
    },
	"InstanceType" : {
      "Description" : "EC2 instance type",
      "Type" : "String", 
      "Default" : "t1.micro",
	  "AllowedValues" : [ "t1.micro", "m1.small", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "c1.medium", "c1.xlarge", "cc1.4xlarge" ],
      "ConstraintDescription" : "Must be a valid EC2 instance type."
    },
    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type" : "String",
	  "Default" : "dev-key"
    },
	"SecurityGroup" : {
	  "Description" : "Name of an existing EC2 Security Group",
	  "Type" : "String",
	  "Default" : "dev-sg"
	},
	"ApplyPuppet" : {
	  "Description" : "Apply the puppet role or not",
	  "Type" : "String",
	  "Default" : "true",
	  "AllowedValues" : [ "true", "false" ]
	},
    "PuppetRole" : {
      "Description" : "Manifest of roles",
      "Type" : "String",
      "Default" : "devserver"
    },
	"BackupAction" : {
	  "Description" : "Action to take with backups",
	  "Type" : "String",
	  "Default" : "backup",
	  "AllowedValues" : [ "backup", "restore", "none" ]
	},	  
	"BackupAccessId" : {
	  "Description" : "BackupAgent AWS Access Key Id",
	  "Type" : "String"
	},
	"BackupSecretKey" : {
	  "Description" : "BackupAgent AWS Secret Access Key",
	  "Type" : "String",
	  "NoEcho" : "TRUE"
	},
	"BackupLocation" : {
	  "Description" : "S3 Address for backup files",
	  "Type" : "String",
	  "Default" : "com.myrontuttle.backup/devserver/"
	}
  },

  "Mappings" : {
    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "32" : "ami-ed65ba84", "64" : "ami-e565ba8c" },
      "us-west-1"      : { "32" : "ami-38c64a08", "64" : "ami-3ac64a0a" },
      "us-west-2"      : { "32" : "ami-978cd4d2", "64" : "ami-e78cd4a2" },
      "eu-west-1"      : { "32" : "ami-fd231b89", "64" : "ami-f9231b8d" },
      "sa-east-1"      : { "32" : "ami-aa855bb7", "64" : "ami-a6855bbb" },
      "ap-southeast-1" : { "32" : "ami-b83374ea", "64" : "ami-be3374ec" },
      "ap-northeast-1" : { "32" : "ami-087acb09", "64" : "ami-e47acbe5" }
    }
  },

  "Resources" : {
    "StackUser" : {
      "Type" : "AWS::IAM::User",
	  "Properties" : {
		"Path" : "/",
		"Policies" : [{
		  "PolicyName": "root",
		  "PolicyDocument" : {
			"Statement" : [{
			  "Effect" : "Allow",
			  "Action" : "cloudformation:DescribeStackResource",
			  "Resource":"*"
			}]
		  }
		}]
	  }
    },
	
	"StackUserAccessKey" : {
     "Type" : "AWS::IAM::AccessKey",
     "Properties" : {
          "UserName" : {"Ref": "StackUser"}
      }
	},

    "EC2Instance" : {
      "Type" : "AWS::EC2::Instance",
	  "Metadata" : {
		"AWS::CloudFormation::Init" : {
		  "config" : {
			"sources" : {
			  "/usr/share/puppet/modules/archive" : "https://github.com/myrontuttle/puppet-archive/zipball/master",
              "/usr/share/puppet/modules/cfn" : "https://github.com/myrontuttle/puppet-cfn-plugin/zipball/master",
		"/usr/share/puppet/modules/apt" : "https://github.com/puppetlabs/puppet-apt/zipball/master",
			  "/usr/share/puppet/modules/stdlib" : "https://github.com/puppetlabs/puppetlabs-stdlib/zipball/master",
              "/usr/share/puppet/modules/duplicity" : "https://github.com/myrontuttle/puppet-duplicity-cfn/zipball/master",
              "/usr/share/puppet/modules/git" : "https://github.com/myrontuttle/puppet-gitolite/zipball/master",
              "/usr/share/puppet/modules/gradle" : "https://github.com/myrontuttle/puppet-gradle/zipball/master",
              "/usr/share/puppet/modules/openjdk" : "https://github.com/myrontuttle/puppet-openjdk/zipball/master",
              "/usr/share/puppet/modules/orion" : "https://github.com/myrontuttle/puppet-orion/zipball/master",
              "/usr/share/puppet/modules/devserver" : "https://github.com/myrontuttle/puppet-devserver/zipball/master",
              "/usr/share/puppet/modules/jenkins" : "https://github.com/myrontuttle/puppet-jenkins/zipball/master"
			},
			"packages" : {
			  "yum" : {
				"puppet"		: [],
                "ruby-devel"    : [],
                "gcc"           : [],
                "make"          : [],
                "rubygems"      : []
			  },
              "rubygems" : {
                "json"          : []
			  }
			},
			"files" : {
              "/etc/yum.repos.d/epel.repo" : {
                "source" : "https://s3.amazonaws.com/cloudformation-examples/enable-epel-on-amazon-linux-ami",
                "mode"   : "000644",
                "owner"  : "root",
                "group"  : "root"
              },
              "/etc/puppet/puppet.conf" : {
                "content" : { "Fn::Join" : ["", [
                  "[main]\n",
                  "   logdir=/var/log/puppet\n",
                  "   rundir=/var/run/puppet\n",
                  "   ssldir=$vardir/ssl\n",
                  "   pluginsync=true\n",
                  "[agent]\n",
                  "   classfile=$vardir/classes.txt\n",
                  "   localconfig=$vardir/localconfig\n"
                ]] },
                "mode" : "000644",
                "owner" : "root",
                "group" : "root"
              }
            }
		  }
		},
		"Puppet" : {
		  "roles"		: {"Ref" : "PuppetRole"},
		  "backup_action"	: {"Ref" : "BackupAction"},
		  "access_id"	: {"Ref" : "BackupAccessId"},
		  "secret_key"	: {"Ref" : "BackupSecretKey"},
		  "file_dest"	: {"Ref" : "BackupLocation"}
		}
	  },
      "Properties" : {
		"ImageId" : { 
		  "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, { "Ref" : "Arch" } ] },
        "SecurityGroups" : [ { "Ref" : "SecurityGroup" } ],
		"InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeyName" },
		"UserData" : { 
          "Fn::Base64" : { 
			"Fn::Join" : [ "", [
			  "#!/bin/bash\n",
              "yum update -y aws-cfn-bootstrap\n",
			  "yum update -y\n",
			  "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackName" }, " -r EC2Instance ", "--region ", { "Ref" : "AWS::Region" }, " --access-key ", { "Ref" : "StackUserAccessKey" }, " --secret-key ", {"Fn::GetAtt" : ["StackUserAccessKey", "SecretAccessKey"]}, "\n",
			  "if [ '", { "Ref" : "ApplyPuppet" }, "' == 'true' ]; then\n",
			  "puppet apply -e 'include ", { "Ref" : "PuppetRole" }, "'\n",
			  "fi\n",
			  "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "ApplicationWaitHandle" }, "'\n"
			]]
          }
        }
      }
    },

    "ApplicationWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "ApplicationWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn"  : "EC2Instance",
      "Properties" : {
        "Handle"   : { "Ref" : "ApplicationWaitHandle" },
        "Timeout"  : "2400"
      }
    }
  },

  "Outputs" : {
    "InstanceId" : {
      "Description" : "InstanceId of the newly created EC2 instance",
      "Value" : { "Ref" : "EC2Instance" }
    },
    "PublicDNS" : {
      "Value" : { "Fn::GetAtt" : [ "EC2Instance", "PublicDnsName" ] }, 
      "Description" : "DNS Name of the newly created EC2 instance"
    },
    "PublicIP" : {
      "Description" : "Public IP address of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "EC2Instance", "PublicIp" ] }
    }
  }
}
